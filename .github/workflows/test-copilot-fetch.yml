name: Test Firewall Wrapper with Copilot Fetch

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

permissions:
  contents: read

jobs:
  test-copilot-fetch:
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies
        run: |
          npm install
          npm run build

      - name: Make wrapper available globally
        run: |
          npm link
          which firewall-wrapper
          firewall-wrapper --version

      - name: Test Copilot CLI fetch through firewall
        timeout-minutes: 5
        env:
          GITHUB_TOKEN: ${{ secrets.COPILOT_CLI_TOKEN }}
        run: |
          set -o pipefail

          # Define the prompt that requires Copilot to fetch data
          PROMPT="Fetch the latest release information from the GitHub API for the repository 'nodejs/node'.
          Specifically, make an HTTP request to https://api.github.com/repos/nodejs/node/releases/latest
          and extract the following information:
          - Release tag name
          - Release name
          - Published date
          - Whether it's a prerelease

          Format the output as JSON with these fields."

          # Run copilot through the firewall wrapper
          # Only allow essential domains for Copilot CLI and GitHub API
          firewall-wrapper \
            --allow-domains raw.githubusercontent.com,api.github.com,github.com,api.anthropic.com,api.enterprise.githubcopilot.com,statsig.anthropic.com,registry.npmjs.org \
            --log-level debug \
            "npx -y @github/copilot@0.0.343 --prompt \"$PROMPT\"" \
            2>&1 | tee /tmp/copilot-fetch-output.log

          # Verify the output contains expected data from the API fetch
          if grep -qi "tag_name\|version\|release" /tmp/copilot-fetch-output.log; then
            echo "✓ Copilot successfully fetched and processed GitHub API data"
            exit 0
          else
            echo "✗ Copilot fetch output doesn't contain expected release information"
            echo "This could indicate network filtering issues through the firewall"
            exit 1
          fi

      - name: Upload logs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: copilot-fetch-logs
          path: /tmp/copilot-fetch-output.log
          if-no-files-found: warn

      - name: Test blocked domain
        timeout-minutes: 3
        env:
          GITHUB_TOKEN: ${{ secrets.COPILOT_CLI_TOKEN }}
        run: |
          set -o pipefail

          echo "Testing that blocked domains are actually blocked..."

          PROMPT="Fetch data from https://httpbin.org/get and show me the response"

          # Run copilot through firewall WITHOUT allowing httpbin.org
          # This should fail or return an error about network access
          firewall-wrapper \
            --allow-domains raw.githubusercontent.com,api.github.com,github.com,api.anthropic.com,api.enterprise.githubcopilot.com,statsig.anthropic.com,registry.npmjs.org \
            --log-level debug \
            "npx -y @github/copilot@0.0.343 --prompt \"$PROMPT\"" \
            2>&1 | tee /tmp/copilot-blocked-output.log || true

          # Verify that the request was blocked (look for connection errors or proxy denial)
          if grep -qi "denied\|blocked\|connection.*failed\|network.*error\|unable to fetch\|cannot access" /tmp/copilot-blocked-output.log; then
            echo "✓ Blocked domain was correctly denied by firewall"
            exit 0
          else
            echo "⚠ Warning: Could not confirm domain blocking (may need manual verification)"
            echo "Check the logs to verify httpbin.org was actually blocked"
            # Don't fail the test - this is a best-effort verification
            exit 0
          fi

      - name: Upload blocked domain test logs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: copilot-blocked-logs
          path: /tmp/copilot-blocked-output.log
          if-no-files-found: warn

      - name: Test Summary
        if: always()
        run: |
          echo "=============================================="
          echo "Firewall Wrapper + Copilot Fetch Test"
          echo "=============================================="
          echo "This test validates that:"
          echo "  1. Copilot CLI can make HTTP requests through the firewall"
          echo "  2. Allowed domains (github.com, api.github.com) are accessible"
          echo "  3. Copilot can fetch and process real API data"
          echo "  4. Blocked domains are denied by the proxy"
          echo "  5. The firewall correctly filters L7 HTTP/HTTPS traffic"
          echo ""
          echo "Test scenarios:"
          echo "  ✓ Fetch GitHub API data (allowed)"
          echo "  ✓ Block httpbin.org (not in allowlist)"
          echo "=============================================="
