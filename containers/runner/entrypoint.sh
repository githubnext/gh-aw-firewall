#!/bin/bash
set -e

echo "[entrypoint] Agentic Workflow Firewall - Runner Container"
echo "[entrypoint] =================================="

# Fix DNS configuration - ensure external DNS works alongside Docker's embedded DNS
# Docker's embedded DNS (127.0.0.11) is used for service name resolution (e.g., squid-proxy)
# External DNS servers (8.8.8.8, 8.8.4.4) are used for internet domain resolution
echo "[entrypoint] Configuring DNS..."
if [ -f /etc/resolv.conf ]; then
  # Backup original resolv.conf
  cp /etc/resolv.conf /etc/resolv.conf.orig

  # Create new resolv.conf with both Docker embedded DNS and external DNS
  # Docker's embedded DNS comes first for service discovery
  cat > /etc/resolv.conf << EOF
# Generated by awf entrypoint
# Docker embedded DNS for service name resolution (squid-proxy, etc.)
nameserver 127.0.0.11
# External DNS servers for internet domain resolution
nameserver 8.8.8.8
nameserver 8.8.4.4
options ndots:0
EOF
  echo "[entrypoint] DNS configured with Docker embedded DNS (127.0.0.11) and external DNS (8.8.8.8, 8.8.4.4)"
fi

# Setup Docker socket permissions if Docker socket is mounted
# This allows MCP servers that run as Docker containers to work
if [ -S /var/run/docker.sock ]; then
  echo "[entrypoint] Configuring Docker socket access..."
  # Get the GID of the docker socket
  DOCKER_GID=$(stat -c '%g' /var/run/docker.sock)
  # Create docker group with same GID as host's docker socket
  if ! getent group docker > /dev/null 2>&1; then
    groupadd -g "$DOCKER_GID" docker || true
  fi
  # Add root user to docker group
  usermod -aG docker root 2>/dev/null || true
  echo "[entrypoint] Docker socket configured (GID: $DOCKER_GID)"
fi

# Setup iptables rules
/usr/local/bin/setup-iptables.sh

# Print proxy environment
echo "[entrypoint] Proxy configuration:"
echo "[entrypoint]   HTTP_PROXY=$HTTP_PROXY"
echo "[entrypoint]   HTTPS_PROXY=$HTTPS_PROXY"

# Print network information
echo "[entrypoint] Network information:"
echo "[entrypoint]   IP address: $(hostname -I)"
echo "[entrypoint]   Hostname: $(hostname)"
echo "[entrypoint] =================================="
echo "[entrypoint] Executing command: $@"
echo ""

# Execute the provided command
exec "$@"
