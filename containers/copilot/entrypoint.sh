#!/bin/bash
set -e

echo "[entrypoint] Firewall Wrapper - Copilot Container"
echo "[entrypoint] =================================="

# Fix DNS configuration - ensure external DNS works alongside Docker's embedded DNS
# Docker's embedded DNS (127.0.0.11) is used for service name resolution (e.g., squid-proxy)
# External DNS servers (8.8.8.8, 8.8.4.4) are used for internet domain resolution
echo "[entrypoint] Configuring DNS..."
if [ -f /etc/resolv.conf ]; then
  # Backup original resolv.conf
  cp /etc/resolv.conf /etc/resolv.conf.orig

  # Create new resolv.conf with both Docker embedded DNS and external DNS
  # Docker's embedded DNS comes first for service discovery
  cat > /etc/resolv.conf << EOF
# Generated by firewall-wrapper entrypoint
# Docker embedded DNS for service name resolution (squid-proxy, etc.)
nameserver 127.0.0.11
# External DNS servers for internet domain resolution
nameserver 8.8.8.8
nameserver 8.8.4.4
options ndots:0
EOF
  echo "[entrypoint] DNS configured with Docker embedded DNS (127.0.0.11) and external DNS (8.8.8.8, 8.8.4.4)"
fi

# Setup iptables rules
/usr/local/bin/setup-iptables.sh

# Print proxy environment
echo "[entrypoint] Proxy configuration:"
echo "[entrypoint]   HTTP_PROXY=$HTTP_PROXY"
echo "[entrypoint]   HTTPS_PROXY=$HTTPS_PROXY"

# Print network information
echo "[entrypoint] Network information:"
echo "[entrypoint]   IP address: $(hostname -I)"
echo "[entrypoint]   Hostname: $(hostname)"

# Test connectivity to Squid
echo "[entrypoint] Testing connectivity to Squid proxy..."
if curl -s -o /dev/null -w "%{http_code}" --proxy "$HTTP_PROXY" --max-time 5 http://www.google.com > /dev/null 2>&1; then
  echo "[entrypoint] ✓ Squid proxy is reachable"
else
  echo "[entrypoint] ✗ WARNING: Could not reach Squid proxy (this may be expected if domains are restricted)"
fi

echo "[entrypoint] =================================="
echo "[entrypoint] Executing command: $@"
echo ""

# Execute the provided command
exec "$@"
